package ru.skypro;

import java.util.Arrays;
import java.util.Locale;

public class MyString {

    public static void main(String[] args) {
        // Задание 1 и Задание 2
//### **Задание 1**
//Представим, что мы работаем в небольшой компании. Данные сотрудников хранятся в неструктурированном формате, и бухгалтерия попросила написать программу, в которой  можно работать с Ф. И. О. сотрудников.
//Напишите четыре строки:
//первая с именем firstName — для хранения имени;
//вторая с именем middleName — для хранения отчества;
//третья с именем lastName — для хранения фамилии;
//четвертая с именем fullName — для хранения Ф. И. О. сотрудника в формате "Фамилия Имя Отчество".
//Выведите в консоль фразу: “ФИО сотрудника — ….”
//В качестве данных для задачи используйте “Ivanov Ivan Ivanovich”.
        String firstName = "Ivan";
        String middleName = "Ivanovich";
        String lastName = "Ivanov";
        String fullName = lastName + " " + firstName + " " + middleName;

        System.out.println(fullName);

//Задание 2
//Для подачи ежемесячного отчета и ведения документации нашей бухгалтерии нужны    Ф. И. О. сотрудников, полностью написанные заглавными буквами (верхним регистром).
//Напишите программу, которая изменит написание Ф. И. О. сотрудника с  “Ivanov Ivan Ivanovich” на полностью заглавные буквы.
//В качестве строки с исходными данными используйте строку fullName.
//Результат программы выведите в консоль в формате: ”Данные ФИО сотрудника для заполнения отчета — …”
        String fullNameUp = fullName.toUpperCase(); // С помощью метода toUpperCase все символы строки fullName перейдут в верхний регистр
        System.out.println("Данные ФИО сотрудника для заполнения отчета — " + fullNameUp);

//Задание 3
//Система, в которой мы работаем, не принимает символ “ё”.
//Поэтому нам нужно написать программу, которая заменяет символ “ё” на символ “е”.
//В качестве исходных данных используйте строку fullName и данные в ней “Иванов Семён Семёнович”.
//Выведите результат программы в консоль в формате: ”Данные ФИО сотрудника — ...”
//- **Подсказка**
//Может потребоваться метод split() и метод contains().

        fullName = "Иванов Семён Семёнович";
        String fullNameReplace = fullName.replace('ё', 'е');
//        System.out.println("Данные ФИО сотрудника " + fullNameReplace);

        System.out.println(Arrays.toString(fullName.split(" ")));
        String[] b = fullName.split(" ");

        for (int i = 0; i < b.length; i++) {
            String new_string = "";
            for (int j = 0; j < b[i].length(); j++) {
                if (b[i].charAt(j) == 'ё') {
                    new_string += 'e';
                } else
                    new_string += b[i].charAt(j);
            }
            b[i] = new_string;
            System.out.println(new_string);
        }

        System.out.println(Arrays.toString(b));

        String c = b[0] + " " + b[1] + b[2];
        System.out.println(c);

        String d = String.join("/", b);

        System.out.println(d);

        //Задание 5
        //К нам снова обратились за помощью, но теперь уже для того, чтобы написать алгоритм, разбивающий одну строку с Ф. И. О. на три — на фамилию, имя и отчество.
        //В качестве исходных данных используйте:
        //Ф. И. О. сотрудника: “Ivanov Ivan Ivanovich”;
        //строка fullName — для хранения Ф. И. О. сотрудника в формате фамилия - имя - отчество;
        //переменная firstName — для хранения имени;
        //переменная middleName — для хранения отчества;
        //переменная lastName — для хранения фамилии.
        //Решите задание с помощью метода substring().
        //Результат программы выведите в формате:
        //“Имя сотрудника — …”
        //“Фамилия сотрудника — …”
        //“Отчество сотрудника — ...”
        //:лампочка: Важно: «в голове» высчитывать позиции пробелов и параметров для обрезания строки запрещено. Их должен вычислить компьютер.

        String a = "Ivanov Ivan Ivanovich";


        int[] f = new int[2];
        int k = 0;
        for (int i = 0; i < a.length(); i++) {
            if (a.charAt(i) == ' ') {
                f[k] = i;
                k++;
            }
        }

        String name = a.substring(0, f[0]);
        String lastNam = a.substring(f[0] + 1, f[1]);
        String ll = a.substring(f[1] + 1, a.length());

        System.out.println(name + " " + lastNam + " " + ll);


        int first = a.indexOf(" ");
        int average = a.lastIndexOf(" ");
        int last = a.length();

        name = a.substring(0, first);
        lastNam = a.substring(first + 1, average);
        ll = a.substring(average + 1, last);

        System.out.println(name + " " + " " + lastNam + " " + ll);


        ///Задание 6
        //Периодически данные в наших регистрах заполняются неверно, и Ф. И. О. сотрудников записывают со строчных букв.
        //Такую оплошность нужно исправить, написав программу, которая преобразует написанное со строчных букв Ф. И. О. в правильный формат.
        //В качестве исходных данных используйте строку fullName c данными “ivanov ivan ivanovich“, которые нужно преобразовать в “Ivanov Ivan Ivanovich”.
        //Выведите результат программы в консоль в формате: “Верное написание Ф. И. О. сотрудника с заглавных букв — …”
        //:sos: Подсказка 1
        //Метод toCharArray() может быть полезен.
        //:sos: Подсказка 2
        //Для преобразования символа в верхний регистр следует использовать метод Character.toUpperCase(c), где c — символ.
        //Критерии оценки
        //– Применен метод, меняющий написание данных строки.
        //– При изменении содержания строки результат программы выполняется.
        //– Результат программы выведен в консоль согласно условиям задачи.

        System.out.println("ЗАДАНИЕ");
        a = "kvanov kvan kvanovich";

        String e = "";

        char[] l = a.toCharArray();

        for (int i = 0; i < l.length; i++) {
            if (i == 0 || i == f[0] + 1 || i == f[1] + 1) {
                e += Character.toUpperCase(l[i]);
            } else
                e += l[i];

        }

        System.out.println(e);

        e = "";
        a = "";
        String fullName1 = "иванов иван сергеевич";
        String[] name1 = fullName1.split(" ");
        System.out.print("Верное написание Ф. И. О. сотрудника с заглавных букв — ");


        for (int i = 0; i < name1.length; i++) {
            e += name1[i].substring(0, 1).toUpperCase() + name1[i].substring(1, name1[i].length()) + " ";


        }
        System.out.println(e);


        //Имеется две строки.
        //Первая: "135"
        //Вторая: "246"
        //Соберите из двух строк одну, содержащую данные "123456".
        //Использовать сортировку нельзя.
        //Набор чисел задан для понимания позиций, которые они должны занять в итоговой строке.
        //Выведите результат в консоль в формате: “Данные строки — ….”
        //:sos: Подсказка
        //Следует использовать StringBuilder.
        //Критерии оценки
        //– Применен метод, меняющий написание данных строки.
        //– При изменении содержания строки результат программы выполняется.
        //– Результат программы выведен в консоль согласно условиям задачи.

        String k1 = "135";
        String k2 = "246";

        StringBuilder k3 = new StringBuilder("");

        for(int i=0;i<k1.length();i++){
            k3.append(k1.charAt(i));
            k3.append(k2.charAt(i));
        }


        //Дана строка из букв английского алфавита "aabccddefgghiijjkk".
        //Нужно найти и напечатать буквы, которые дублируются в строке.
        //Обратите внимание, что строка отсортирована, т. е. дубли идут друг за другом.
        //В итоге в консоль должен быть выведен результат программы: "acdgijk".
        //Критерии оценки
        //– Данные в строке отсортированы корректно.
        //– При изменении содержания строки результат программы выполняется.
        //– Результат программы выведен в консоль согласно условиям задачи.

        char[] k7= "aaaabccaddefgghiijjkkk".toCharArray();
        Arrays.sort(k7);
        String k4 = "";
        k4 = String.join("",k4);

        String k5 = "";
        char k6 = ' ';
        for(int i=0; i<k4.length()-1;i++)
            for(int j=i+1; j<k4.length();j++)
                if(k4.charAt(i) == k4.charAt(j) && k4.charAt(i)!=k6) {
                    k5 += k4.charAt(i);
                    k6 = k4.charAt(i);
                }

        System.out.println(k5);
    }
}